<script>
        document.addEventListener(DOMContentLoaded, () => {
          let body = document.body,
            prefersDark = window.matchMedia(
              '(prefers-color-scheme: dark)',
            ).matches
          function copyCode() {
            var o = document.getElementById('bootCode').textContent
            ;(navigator.clipboard.writeText(o), alert('Syntax copied!'))
          }
          function getBrowserInfo() {
            let o = navigator.userAgent,
              e = 'Unknown',
              i = '',
              t = 'N/A'
            return (
              -1 < o.indexOf('Brave')
                ? ((e = 'Brave'),
                  (i =
                    'https://upload.wikimedia.org/wikipedia/commons/3/3e/Brave_logo.svg'))
                : -1 < o.indexOf('Firefox')
                  ? ((e = 'Firefox'),
                    (t = o.match(/Firefox\/([0-9\.]+)/)[1]),
                    (i =
                      'https://upload.wikimedia.org/wikipedia/commons/a/a0/Firefox_logo%2C_2019.svg'))
                  : -1 < o.indexOf('Chrome') && -1 == o.indexOf('Edg')
                    ? ((e = 'Chrome'),
                      (t = o.match(/Chrome\/([0-9\.]+)/)[1]),
                      (i =
                        'https://upload.wikimedia.org/wikipedia/commons/8/87/Google_Chrome_icon_%282011%29.png'))
                    : -1 < o.indexOf('Chromium')
                      ? ((e = 'Chromium'),
                        (i =
                          'https://upload.wikimedia.org/wikipedia/commons/d/d5/Chromium_Logo.svg'))
                      : -1 < o.indexOf('Safari') && -1 == o.indexOf('Chrome')
                        ? ((e = 'Safari'),
                          (t = o.match(/Version\/([0-9\.]+)/)[1]),
                          (i =
                            'https://upload.wikimedia.org/wikipedia/commons/5/52/Safari_browser_logo.svg'))
                        : -1 < o.indexOf('Edg')
                          ? ((e = 'Edge'),
                            (t = o.match(/Edg\/([0-9\.]+)/)[1]),
                            (i =
                              'https://upload.wikimedia.org/wikipedia/commons/1/1f/Microsoft_Edge_logo_%282019%29.svg'))
                          : -1 < o.indexOf('OPR') &&
                            ((e = 'Opera'),
                            (t = o.match(/OPR\/([0-9\.]+)/)[1]),
                            (i =
                              'https://upload.wikimedia.org/wikipedia/commons/4/49/Opera_2015_icon.svg')),
              { name: e, version: t, icon: i }
            )
          }
          function getOSInfo() {
            var o,
              e = navigator.platform.toLowerCase(),
              i = navigator.userAgent.toLowerCase()
            let t = 'Unknown OS',
              n = '',
              a = ''
            return (
              -1 !== e.indexOf('win')
                ? ((t = 'Windows'),
                  (o = i.match(/windows nt ([0-9\.]+)/)),
                  (n = o ? o[1] : ''),
                  (a =
                    'https://upload.wikimedia.org/wikipedia/commons/5/5f/Windows_logo_-_2021.svg'))
                : -1 !== e.indexOf('mac')
                  ? ((t = 'macOS'),
                    (o = i.match(/mac os x ([0-9_]+)/)),
                    (n = o ? o[1].replace(/_/g, '.') : ''),
                    (a =
                      'https://upload.wikimedia.org/wikipedia/commons/f/fa/Apple_logo_black.svg'))
                  : -1 !== e.indexOf('linux')
                    ? ((t = 'Linux'),
                      (a =
                        'https://upload.wikimedia.org/wikipedia/commons/a/af/Tux.png'))
                    : /android/.test(i)
                      ? ((t = 'Android'),
                        (a =
                          'https://upload.wikimedia.org/wikipedia/commons/d/d7/Android_robot.svg'))
                      : /iphone|ipad|ipod/.test(i) &&
                        ((t = 'iOS'),
                        (a =
                          'https://upload.wikimedia.org/wikipedia/commons/f/fa/Apple_logo_black.svg')),
              { name: t, version: n, icon: a }
            )
          }
          ;(prefersDark && body.classList.add('dark'),
            document
              .getElementById('toggleDark')
              .addEventListener('click', () => {
                body.classList.toggle('dark')
              }))
          let browser = getBrowserInfo(),
            os =
              ((document.getElementById('browserIcon').src = browser.icon),
              (document.getElementById('browserText').textContent =
                `Browser: ${browser.name} ` + browser.version),
              getOSInfo())
          ;((document.getElementById('osIcon').src = os.icon),
            (document.getElementById('osText').textContent =
              `OS: ${os.name} ` + os.version),
            fetch('https://ipapi.co/json/')
              .then((o) => o.json())
              .then((o) => {
                ;((document.getElementById('ipText').textContent =
                  `IP: ${o.ip} (${o.country_name})`),
                  (document.getElementById('flagIcon').src =
                    `https://flagcdn.com/48x36/${o.country_code.toLowerCase()}.png`))
              })
              .catch(() => {
                document.getElementById('ipText').textContent =
                  'IP: Tidak dapat diambil'
              }))
        })
      </script>
