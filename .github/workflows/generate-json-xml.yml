name: bikin artikel.json & sitemap.xml

on:
  push:
    branches: ["main"]
    paths:
      - 'artikel/*.html'
  workflow_dispatch:

jobs:
  generator:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: npm ci

      - name: Run generator.js
        run: node ext/generator.js

      - name: Debug cek file output
        run: |
          ls -lah
          cat artikel.json || echo "artikel.json tidak ada"
          cat sitemap.xml || echo "sitemap.xml tidak ada"

      - name: Commit and Push results (only on main)
        if: github.ref == 'refs/heads/main'
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          git add artikel.json sitemap.xml
          git commit -m "üîÑ Update artikel.json & sitemap.xml (auto)" || echo "No changes to commit"
          git push origin HEAD:main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Show Published Links & Summary
        if: github.ref == 'refs/heads/main'
        run: |
          echo "‚úÖ File berhasil dipublish ke GitHub Pages:"
          echo "üîó artikel.json: https://frijal.github.io/artikel.json"
          echo "üîó sitemap.xml : https://frijal.github.io/sitemap.xml"
          echo ""
          echo "üìÑ Artikel yang berubah di commit ini:"
          CHANGED=$(git diff --name-only HEAD~1 HEAD | grep '^artikel/.*\.html$' || true)
          if [ -z "$CHANGED" ]; then
            echo "‚ö†Ô∏è Tidak ada artikel .html yang berubah."
          else
            for f in $CHANGED; do
              base=$(basename "$f")
              echo "üîó https://frijal.github.io/artikel/$base"
            done
          fi
          echo ""
          echo "üìä Jumlah total artikel saat ini:"
          COUNT=$(ls artikel/*.html 2>/dev/null | wc -l)
          echo "‚û°Ô∏è  $COUNT artikel di folder artikel/"
          echo ""
          echo "üìÇ Jumlah kategori unik & distribusi:"
          if [ -f artikel.json ]; then
            CATEGORIES=$(jq 'keys | length' artikel.json)
            echo "‚û°Ô∏è  $CATEGORIES kategori unik"
            echo ""
            echo "üìå Daftar kategori & jumlah artikelnya:"
            jq -r 'to_entries[] | "‚Ä¢ \(.key): \(.value | length) artikel"' artikel.json
            echo ""
            echo "üÜï Artikel terbaru:"
            jq -r '
              to_entries
              | map({kategori: .key, artikel: .value})
              | map(.artikel | map({judul: .[0], file: .[1], kategori: input_filename}) )
              ' artikel.json > /dev/null
            # ambil artikel terakhir dari semua kategori
            jq -r '
              to_entries
              | map({kategori: .key, artikel: .value})
              | map(.artikel[] as $a | {kategori: .key, judul: $a[0], file: $a[1]})
              | .[-1] | "‚Ä¢ \(.judul) [Kategori: \(.kategori)]"
            ' artikel.json
          else
            echo "‚ö†Ô∏è artikel.json tidak ditemukan"
          fi
