name: Generate All Site Artifacts

on:
  # Pemicu utama: saat ada file .html baru/berubah di folder artikel
  push:
    branches: ["main"]
    paths:
      - 'artikel/*.html'
  # Pemicu manual untuk testing atau menjalankan ulang
  workflow_dispatch:
  # Pemicu terjadwal untuk memastikan semuanya tetap sinkron
  schedule:
    - cron: '0 22 * * *' # Menjalankan setiap hari jam 10 malam WITA

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 1. Checkout repository code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 2. Setup Node.js environment
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: 3. Install project dependencies
        run: npm ci

      - name: 4. Generate 'artikel.json' and 'sitemap.xml'
        run: node ext/generator.js

      - name: 5. Generate RSS Feed and Aliases
        run: |
          node ext/rss.js
          echo "Membuat alias untuk RSS feed..."
          cp -f rss.xml rss
          cp -f rss.xml atom
          cp -f rss.xml feed

      - name: 6. Generate 'artikel-terbaru.html' page
        run: node ext/build-page.js

      # === BAGIAN YANG DIPERBAIKI ADA DI BAWAH INI ===
      - name: 7. Generate Article Cover Images
        id: process_files
        run: |
          echo "Mempersiapkan server untuk screenshot..."
          # Kita tidak perlu `npm install http-server` lagi di sini karena sudah ada dari `npm ci`
          nohup ./node_modules/.bin/http-server . -p 8080 --silent &
          sleep 5 # Beri waktu server untukÂêØÂä®
          
          PLAYWRIGHT_IMAGE="mcr.microsoft.com/playwright:v1.55.1-jammy"

          if [ ! -f "ext/screenshot.js" ]; then
            echo "::error::File 'ext/screenshot.js' tidak ditemukan."
            exit 1
          fi

          echo "Mulai memproses file HTML untuk screenshot..."
          find artikel/ -name "*.html" | while read -r HTML_FILE; do
            BASE_NAME=$(echo "$HTML_FILE" | sed -e 's|^artikel/||' -e 's|.html$||')
            FILE_NAME=$(echo "$BASE_NAME" | sed 's|[^a-zA-Z0-9_-]|_|g')
            FINAL_PATH="artikel/${FILE_NAME}.jpg"
            TEMP_OUTPUT="temp_screenshot.jpg"

            if [ -f "$FINAL_PATH" ]; then
              echo "‚úÖ Screenshot sudah ada: $FINAL_PATH. Dilewati."
            else
              echo "‚è≥ Mengambil screenshot untuk: $HTML_FILE"
              LOCAL_URL="http://localhost:8080/$(echo "$HTML_FILE" | sed 's|^./||')"
              
              # === PERBAIKAN UTAMA: Install dependensi DI DALAM kontainer ===
              docker run --rm --network host -v "${PWD}:/workspace" "$PLAYWRIGHT_IMAGE" \
                bash -c "cd /workspace && npm ci && node ext/screenshot.js '$LOCAL_URL' '$TEMP_OUTPUT'"
              
              if [ -f "$TEMP_OUTPUT" ]; then
                mv "$TEMP_OUTPUT" "$FINAL_PATH"
                echo "‚úÖ Screenshot baru berhasil disimpan: $FINAL_PATH"
              else
                echo "::warning::Gagal memproses $HTML_FILE."
              fi
            fi
          done

      - name: 8. Commit and Push all generated files
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

          if [[ -z $(git status -s) ]]; then
            echo "‚úÖ Tidak ada perubahan file, tidak perlu commit."
            exit 0
          fi
          
          echo "‚úÖ Perubahan ditemukan. Melakukan commit..."
          git add .
          git commit -m "ü§ñ [Auto] Update generated site files"
          
          echo "üîÉ Melakukan sinkronisasi dengan remote repository..."
          git pull --rebase origin main
          
          echo "üöÄ Mendorong perubahan ke server..."
          git push origin main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: 9. Show Summary
        if: always()
        run: |
          echo "‚úÖ Proses selesai. File yang di-generate:"
          echo "üîó https://frijal.github.io/artikel.json"
          echo "üîó https://frijal.github.io/sitemap.xml"
          echo "üîó https://frijal.github.io/artikel/artikel-terbaru.html"
          echo "üîó https://frijal.github.io/rss.xml"
          echo ""
          echo "üìä Jumlah total artikel saat ini:"
          COUNT=$(ls artikel/*.html 2>/dev/null | wc -l)
          echo "‚û°Ô∏è  $COUNT artikel di folder artikel/"

