name: üì∏ Ambil Screenshot File HTML Artikel
on:
  workflow_dispatch:
    inputs:
      html_glob:
        description: 'Pola file HTML untuk di-screenshot'
        required: true
        default: 'artikel/**/*.html'

jobs:
  screenshot_proses:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout Kode Repositori
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚öôÔ∏è Siapkan Node.js & Instal HTTP Server
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install http-server

      - name: üíæ Instal Playwright (Modul Lokal)
        # Menginstal modul Playwright terbaru di runner utama
        run: npm install playwright

      - name: ‚ñ∂Ô∏è Jalankan HTTP Server di Background
        run: |
          nohup ./node_modules/.bin/http-server . -p 8080 --silent &
          echo "Server dijalankan di port 8080."
          
      - name: üîç Temukan, Periksa, dan Proses File HTML
        id: process_files
        run: |
          CHANGES_MADE=false
          mkdir -p artikel
          
          PLAYWRIGHT_IMAGE="mcr.microsoft.com/playwright:v1.55.1-jammy" 
          
          if [ ! -f "ext/screenshot.js" ]; then
            echo "::error::File 'ext/screenshot.js' tidak ditemukan. Harap tambahkan skrip secara manual."
            exit 1
          fi
          
          find artikel/ -name "*.html" | while read -r HTML_FILE; do
              
              BASE_NAME=$(echo "$HTML_FILE" | sed -e 's|^artikel/||' -e 's|.html$||')
              FILE_NAME=$(echo "$BASE_NAME" | sed 's|[^a-zA-Z0-9_-]|_|g')
              FINAL_PATH="artikel/${FILE_NAME}.jpg"
              TEMP_OUTPUT_INSIDE_DOCKER="/workspace/temp_screenshot_final_$(date +%s%N).jpg" # Nama unik di dalam Docker
              TEMP_OUTPUT_OUTSIDE="$FINAL_PATH" # Target akhir di runner
              
              echo "--- Memproses $HTML_FILE -> $FINAL_PATH ---"
              
              if [ -f "$FINAL_PATH" ]; then
                  echo "Screenshot JPG sudah ada: $FINAL_PATH. Dilewati."
              else
                  LOCAL_URL="http://localhost:8080/$(echo "$HTML_FILE" | sed 's|^./||')"
                  INSTALL_DIR="/tmp/playwright-install"
                  
                  echo "Mengambil screenshot..."
                  
                  # !!! PERBAIKAN UTAMA: Pindah lokasi file di dalam container !!!
                  docker run --rm \
                    -v "${PWD}:/workspace" \
                    --network host "$PLAYWRIGHT_IMAGE" \
                    bash -c "\
                      npm install playwright --no-save --prefix $INSTALL_DIR > /dev/null && \
                      export NODE_PATH=$INSTALL_DIR/node_modules && \
                      node /workspace/ext/screenshot.js '$LOCAL_URL' '$TEMP_OUTPUT_INSIDE_DOCKER' && \
                      
                      # File seharusnya sudah ada di /workspace/. Setelah ini, Bash di luar akan menemukannya.
                      echo 'File berhasil dibuat dan disimpan di $TEMP_OUTPUT_INSIDE_DOCKER'\
                    "
                  
                  DOCKER_EXIT_CODE=$?
                  
                  # 2. Periksa Hasil di Runner (di luar Docker)
                  # Ganti pemeriksaan 'temp_screenshot.jpg' yang bermasalah menjadi pemeriksaan nama akhir yang benar
                  if [ $DOCKER_EXIT_CODE -eq 0 ] && [ -f "$TEMP_OUTPUT_OUTSIDE" ]; then
                      echo "::warning::File output sudah ada: $TEMP_OUTPUT_OUTSIDE"
                  fi

                  # Pindahkan file yang sudah dibuat Docker ke nama akhir yang benar
                  if [ $DOCKER_EXIT_CODE -eq 0 ] && [ -f "$TEMP_OUTPUT_INSIDE_DOCKER" ]; then
                      # File ditemukan! Pindahkan ke nama final
                      mv "$TEMP_OUTPUT_INSIDE_DOCKER" "$FINAL_PATH"
                      echo "Screenshot baru berhasil disimpan: $FINAL_PATH"
                      CHANGES_MADE=true
                  else
                      # Proses gagal atau file hilang
                      echo "::warning::Gagal memproses $HTML_FILE. Docker Exit Code: $DOCKER_EXIT_CODE. File output hilang."
                      rm -f "$TEMP_OUTPUT_INSIDE_DOCKER"
                  fi
              fi
          done
          
          if [ "$CHANGES_MADE" = true ]; then
             echo "changes_made=true" >> $GITHUB_OUTPUT
          else
             echo "changes_made=false" >> $GITHUB_OUTPUT
          fi

      - name: ‚¨ÜÔ∏è Commit dan Push Screenshot Baru
        if: ${{ steps.process_files.outputs.changes_made == 'true' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          
          git add artikel/
          git commit -m "feat: Menambahkan screenshot viewport baru di artikel/"
          git push
