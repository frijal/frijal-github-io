name: üì∏ Ambil Screenshot File HTML Artikel
on:
  workflow_dispatch:
    inputs:
      html_glob:
        description: 'Pola file HTML untuk di-screenshot'
        required: true
        default: 'artikel/**/*.html'

jobs:
  screenshot_proses:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout Kode Repositori
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚öôÔ∏è Siapkan Node.js & Instal HTTP Server
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install http-server

      - name: üìù Buat Skrip Screenshot Playwright (Langkah Asli)
        # Kami mengembalikan skrip karena sudah terbukti valid tanpa error sintaks
        run: |
          mkdir -p ext
          cat > ext/screenshot.js <<'EOF'
const playwright = require('playwright');
async function takeScreenshot(url, outputPath) {
  const browser = await playwright.chromium.launch();
  const page = await browser.newPage();
  await page.setViewportSize({ width: 1280, height: 800 }); 
  
  try {
    const response = await page.goto(url, { waitUntil: 'load' });
    
    if (response && response.status() !== 200) {
       console.error(`[ERROR] Gagal memuat ${url}. Status: ${response.status()}`);
       await browser.close();
       return 1;
    }

    await page.screenshot({ path: outputPath, type: 'jpeg', quality: 90 });
    console.log(`[SUCCESS] Screenshot disimpan sebagai ${outputPath}`);

  } catch (error) {
    console.error(`[FATAL] Gagal mengambil screenshot untuk ${url}: ${error.message}`);
    return 1;
  } finally {
    await browser.close();
  }
  return 0;
}

takeScreenshot(process.argv[2], process.argv[3]).then(process.exit);
EOF

      - name: üíæ Instal Playwright di Runner Utama
        # Instal Playwright di runner, bukan di dalam container, untuk menghindari isu NPM cache
        run: npm install playwright

      - name: ‚ñ∂Ô∏è Jalankan HTTP Server di Background
        run: |
          nohup ./node_modules/.bin/http-server . -p 8080 --silent &
          echo "Server dijalankan di port 8080."
          
      - name: üîç Temukan, Periksa, dan Proses File HTML
        id: process_files
        run: |
          CHANGES_MADE=false
          mkdir -p artikel
          
          # !!! PERBAIKAN UTAMA: Ganti versi Docker Image ke yang kompatibel !!!
          # Menggunakan versi yang lebih baru (v1.55.1) sesuai permintaan log
          PLAYWRIGHT_IMAGE="mcr.microsoft.com/playwright:v1.55.1-jammy" 
          
          find artikel/ -name "*.html" | while read -r HTML_FILE; do
              
              BASE_NAME=$(echo "$HTML_FILE" | sed -e 's|^artikel/||' -e 's|.html$||')
              FILE_NAME=$(echo "$BASE_NAME" | sed 's|[^a-zA-Z0-9_-]|_|g')
              FINAL_PATH="artikel/${FILE_NAME}.jpg"
              
              echo "--- Memproses $HTML_FILE -> $FINAL_PATH ---"
              
              if [ -f "$FINAL_PATH" ]; then
                  echo "Screenshot JPG sudah ada: $FINAL_PATH. Dilewati."
              else
                  LOCAL_URL="http://localhost:8080/$(echo "$HTML_FILE" | sed 's|^./||')"
                  
                  # Eksekusi Node.js dengan modul Playwright yang sudah diinstal di runner utama.
                  # Kita mengandalkan mount volume untuk menemukan node_modules
                  docker run --rm -v "${PWD}:/workspace" --network host "$PLAYWRIGHT_IMAGE" \
                    node /workspace/ext/screenshot.js "$LOCAL_URL" "temp_screenshot.jpg"
                  
                  if [ $? -eq 0 ] && [ -f "temp_screenshot.jpg" ]; then
                      mv temp_screenshot.jpg "$FINAL_PATH"
                      echo "Screenshot baru berhasil dibuat: $FINAL_PATH"
                      CHANGES_MADE=true
                  else
                      echo "[FAILED] Gagal membuat screenshot untuk $HTML_FILE. Cek log Docker."
                      rm -f "temp_screenshot.jpg"
                  fi
              fi
          done
          
          if [ "$CHANGES_MADE" = true ]; then
             echo "changes_made=true" >> $GITHUB_OUTPUT
          else
             echo "changes_made=false" >> $GITHUB_OUTPUT
          fi

      - name: ‚¨ÜÔ∏è Commit dan Push Screenshot Baru
        if: ${{ steps.process_files.outputs.changes_made == 'true' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          
          git add artikel/
          git commit -m "feat: Menambahkan screenshot viewport baru di artikel/"
          git push
