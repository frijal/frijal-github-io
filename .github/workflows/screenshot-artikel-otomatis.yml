name: üì∏ Ambil Screenshot File HTML Artikel
on:
  # 1. Pemicu Manual (untuk pengujian)
  workflow_dispatch:
    inputs:
      html_glob:
        description: 'Pola file HTML untuk di-screenshot'
        required: true
        default: 'artikel/**/*.html'
  
  # 2. Pemicu Otomatis (saat ada commit ke file HTML)
  push:
    paths:
      - 'artikel/**/*.html' 

jobs:
  screenshot_proses:
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout Kode Repositori
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: ‚öôÔ∏è Siapkan Node.js & Instal Server
        uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install http-server
      - run: npm install playwright # Instal modul Playwright lokal

      - name: ‚ñ∂Ô∏è Jalankan HTTP Server di Background
        run: |
          nohup ./node_modules/.bin/http-server . -p 8080 --silent &
          echo "Server dijalankan di port 8080."
          
      # --- LANKAH UTAMA: PROSES SCREENSHOT ---
      - name: üîç Temukan, Periksa, dan Proses File HTML
        id: process_files
        run: |
          # Dijalankan secara sinkron (satu per satu)
          CHANGES_MADE=false
          mkdir -p artikel
          
          PLAYWRIGHT_IMAGE="mcr.microsoft.com/playwright:v1.55.1-jammy" 
          
          if [ ! -f "ext/screenshot.js" ]; then
            echo "::error::File 'ext/screenshot.js' tidak ditemukan. Harap tambahkan skrip secara manual."
            exit 1
          fi
          
          find artikel/ -name "*.html" | while read -r HTML_FILE; do
              
              BASE_NAME=$(echo "$HTML_FILE" | sed -e 's|^artikel/||' -e 's|.html$||')
              FILE_NAME=$(echo "$BASE_NAME" | sed 's|[^a-zA-Z0-9_-]|_|g')
              FINAL_PATH="artikel/${FILE_NAME}.jpg"
              TEMP_OUTPUT_INSIDE_DOCKER="temp_screenshot.jpg" 
              
              echo "--- Memproses $HTML_FILE -> $FINAL_PATH ---"
              
              if [ -f "$FINAL_PATH" ]; then
                  echo "Screenshot JPG sudah ada: $FINAL_PATH. Dilewati."
              else
                  LOCAL_URL="http://localhost:8080/$(echo "$HTML_FILE" | sed 's|^./||')"
                  INSTALL_DIR="/tmp/playwright-install"
                  
                  # Eksekusi Docker dengan Node_Modules dari runner utama (via /workspace)
                  docker run --rm -v "${PWD}:/workspace" --network host "$PLAYWRIGHT_IMAGE" \
                    bash -c "\
                      export NODE_PATH=/workspace/node_modules && \
                      node /workspace/ext/screenshot.js '$LOCAL_URL' '/workspace/$TEMP_OUTPUT_INSIDE_DOCKER'\
                    "
                  
                  DOCKER_EXIT_CODE=$?
                  
                  if [ $DOCKER_EXIT_CODE -eq 0 ] && [ -f "$TEMP_OUTPUT_INSIDE_DOCKER" ]; then
                      mv "$TEMP_OUTPUT_INSIDE_DOCKER" "$FINAL_PATH"
                      echo "[SUCCESS] Screenshot baru berhasil disimpan: $FINAL_PATH"
                      CHANGES_MADE=true
                  else
                      echo "::warning::[FAILED] Gagal memproses $HTML_FILE. Docker Exit Code: $DOCKER_EXIT_CODE. File output hilang."
                      rm -f "$TEMP_OUTPUT_INSIDE_DOCKER"
                  fi
              fi
          done
          
          if [ "$CHANGES_MADE" = true ]; then
             echo "changes_made=true" >> "$GITHUB_OUTPUT"
          else
             echo "changes_made=false" >> "$GITHUB_OUTPUT"
          fi

      # --- LANGKAH MAINTENANCE: CLEANUP FILE YATIM ---
      - name: üßπ Hapus JPG Tanpa Pasangan HTML (Maintenance)
        id: cleanup
        run: |
          CLEANUP_NEEDED=false
          echo "Memulai scan file JPG tanpa file HTML pasangan..."
          
          find artikel/ -name "*.jpg" -print0 | while IFS= read -r -d $'\0' JPG_FILE; do
              
              HTML_FILE="${JPG_FILE/.jpg/.html}"
              
              if [ ! -f "$HTML_FILE" ]; then
                  echo "Menghapus: $JPG_FILE (HTML tidak ditemukan: $HTML_FILE)"
                  rm "$JPG_FILE"
                  CLEANUP_NEEDED=true
              fi
          done
          
          if [ "$CLEANUP_NEEDED" = true ]; then
              echo "changes_made=true" >> "$GITHUB_OUTPUT"
              echo "Cleanup selesai. File telah dihapus."
          fi

      # --- LANGKAH AKHIR: COMMIT PERUBAHAN ---
      - name: ‚¨ÜÔ∏è Commit dan Push Screenshot Baru/Dihapus
        # Commit akan berjalan jika:
        # 1. steps.process_files membuat file baru, ATAU
        # 2. steps.cleanup menghapus file lama.
        if: ${{ steps.process_files.outputs.changes_made == 'true' || steps.cleanup.outputs.changes_made == 'true' }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action Bot"
          
          git add artikel/
          # Menggunakan --allow-empty agar tidak gagal jika hanya ada perubahan pada git status (seperti penghapusan)
          git commit -m "feat: Otomatis menambahkan/menghapus screenshot baru dari workflow (Maintenance)" --allow-empty
          git push
