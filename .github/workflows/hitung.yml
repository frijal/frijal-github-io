# .github/workflows/count-report-badge-artikel.yml

name: Hitung & Lapor File Artikel Non-Recursive

on:
  schedule:
    # Setiap hari pukul 05:00 WITA (UTC+8) â†’ 21:00 UTC hari sebelumnya
    - cron: '0 21 * * *'

jobs:
  count_and_report:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Variables
        id: vars
        run: |
          TARGET="artikel"
          DATE=$(date +'%m-%d')
          SANITIZED=$(echo "$TARGET" | sed 's/[^[:alnum:]]/_/g')
          REPORT="mini/${DATE}-laporan_${SANITIZED}.txt"
          echo "report_path=$REPORT" >> $GITHUB_OUTPUT
          echo "target=$TARGET"     >> $GITHUB_OUTPUT
          echo "date=$DATE"         >> $GITHUB_OUTPUT

      - name: Count Files by Extension
        id: counts
        run: |
          TARGET="${{ steps.vars.outputs.target }}"
          declare -A counts
          for ext in html jpg png; do
            counts[$ext]=$(find "$TARGET" -maxdepth 1 -type f -iname "*.$ext" | wc -l)
          done
          counts[all]=$(find "$TARGET" -maxdepth 1 -type f | wc -l)
          for key in "${!counts[@]}"; do
            echo "$key=${counts[$key]}" >> $GITHUB_OUTPUT
          done

      - name: Generate Report
        run: |
          REPORT="${{ steps.vars.outputs.report_path }}"
          DATE="${{ steps.vars.outputs.date }}"
          TARGET="${{ steps.vars.outputs.target }}"
          mkdir -p "$(dirname "$REPORT")"
          {
            echo "LAPORAN: $TARGET ($DATE)"
            echo "Total File: ${{ steps.counts.outputs.all }}"
            echo "HTML=${{ steps.counts.outputs.html }}, JPG=${{ steps.counts.outputs.jpg }}, PNG=${{ steps.counts.outputs.png }}"
            echo ""
            echo "Ringkasan per ekstensi:"
            find "$TARGET" -maxdepth 1 -type f -print \
              | sed 's/.*\.//' \
              | sort \
              | uniq -c \
              | sort -nr
          } > "$REPORT"
          cat "$REPORT"

      - name: Install jq
        run: |
          sudo apt-get update
          sudo apt-get install -y jq

      - name: Buat Badge JSON
        run: |
          mkdir -p ext
          html=${{ steps.counts.outputs.html }}
          jpg=${{ steps.counts.outputs.jpg }}
          color=$(if (( html > jpg )); then echo green; elif (( html < jpg )); then echo red; else echo blue; fi)

          jq -n --arg m "$html" \
            '{schemaVersion:1, label:"artikel", message:$m, color:"blue"}' \
            > ext/html_count_badge.json

          jq -n --arg m "$jpg" \
            '{schemaVersion:1, label:"cover", message:$m, color:"green"}' \
            > ext/jpg_count_badge.json

          jq -n --arg mh "$html" --arg mj "$jpg" --arg c "$color" \
            '{schemaVersion:1, label:"html/jpg", message:("\($mh) / \($mj)"), color:$c}' \
            > ext/html_jpg_badge.json

      - name: Rotate Reports
        run: |
          mkdir -p mini
          mapfile -t files < <(ls -1t mini/*-laporan_*.txt 2>/dev/null)
          if ((${#files[@]} > 7)); then
            printf '%s\n' "${files[@]:7}" | xargs rm -f
          fi

      - name: Commit Jika Ada Perubahan
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: >
            chore: update laporan & badge untuk artikel
          branch: ${{ github.ref_name }}
          file_pattern: |
            mini/*
            ext/*
          skip_empty_commit: true
