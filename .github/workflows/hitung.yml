name: Hitung File, Commit Laporan + Badge Dinamis

on:
  workflow_dispatch:
    inputs:
      target_folder:
        description: 'Lokasi folder yang akan di-scan (contoh: src atau .)'
        required: true
        default: '.'

jobs:
  count_and_report:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
           
      - name: Siapkan Folder Laporan
        run: mkdir -p mini/

      - name: Hitung dan Buat Laporan File
        id: file_counting
        run: |
          TARGET_DIR="${{ github.event.inputs.target_folder }}"
          URL_PREFIX="https://frijal.github.io/"
          SANITIZED_DIR_NAME=$(echo "${TARGET_DIR}" | sed 's/[^a-zA-Z0-9]/_/g')
          REPORT_FILE="mini/laporan_jumlah_file_${SANITIZED_DIR_NAME}.txt"

          echo "Memulai scanning di folder: ${TARGET_DIR}"

          if [ ! -d "${TARGET_DIR}" ]; then
            echo "::error::Error: Folder '${TARGET_DIR}' tidak ditemukan."
            exit 1
          fi

          # Hitung total file
          TOTAL_FILES=$(find "${TARGET_DIR}" -type f | wc -l)
          TOTAL_HTML=$(find "${TARGET_DIR}" -type f -name "*.html" | wc -l)
          TOTAL_JPG=$(find "${TARGET_DIR}" -type f -name "*.jpg" | wc -l)

          # Tulis laporan ringkas
          echo "LAPORAN JUMLAH FILE FOLDER '${TARGET_DIR}'" > ${REPORT_FILE}
          echo "==================================" >> ${REPORT_FILE}
          echo "SUMMARY: Total File Ditemukan = ${TOTAL_FILES}" >> ${REPORT_FILE}
          echo "HTML = ${TOTAL_HTML}, JPG = ${TOTAL_JPG}" >> ${REPORT_FILE}

          echo "total_html=${TOTAL_HTML}" >> $GITHUB_OUTPUT
          echo "total_jpg=${TOTAL_JPG}" >> $GITHUB_OUTPUT

      - name: Buat Badge JSON Gabungan (HTML/JPG) dengan Warna Dinamis
        run: |
          HTML=${{ steps.file_counting.outputs.total_html }}
          JPG=${{ steps.file_counting.outputs.total_jpg }}

          if [ "$HTML" -gt "$JPG" ]; then
            COLOR="green"
          elif [ "$HTML" -lt "$JPG" ]; then
            COLOR="red"
          else
            COLOR="blue"
          fi

          mkdir -p mini/
          echo "{
            \"schemaVersion\": 1,
            \"label\": \"html/jpg\",
            \"message\": \"${HTML} / ${JPG}\",
            \"color\": \"${COLOR}\"
          }" > mini/html_jpg_badge.json

          cat mini/html_jpg_badge.json

      - name: Commit File Laporan & Badge ke Repositori
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Laporan & Badge Dinamis: Update jumlah file di folder ${{ github.event.inputs.target_folder }}"
          branch: ${{ github.ref_name }}
          file_pattern: mini/*
