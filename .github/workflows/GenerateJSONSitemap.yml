name: Generate JSON & Sitemap

on:
  push:
    branches:
      - main
    paths:
      - 'artikel/**'     # hanya jalan kalau ada perubahan di folder artikel/
  schedule:
    - cron: "0 0 * * *"   # jalan otomatis tiap tengah malam UTC
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install dependencies
        run: |
          npm init -y
          npm install jsdom

      - name: Generate artikel.json & sitemap.xml
        run: |
          cat > generate.js <<'EOF'
          const fs = require("fs");
          const { JSDOM } = require("jsdom");

          const BASE_URL = "https://frijal.github.io/artikel/";
          const FALLBACK_IMG = "thumbnail.jpg";

          function titleToCategory(title){
            const t = title.toLowerCase();
            const cats = [
              {name: "üìΩÔ∏è Multimedia & Editing", k:["ffmpeg","video","film","audio","mp3","ogg","rekam","convert","split","cut","durasi","imagemagick","resize","format","potong","watermark","foto","gambar","pdf","gabung","kompres","scan","ghostscript","pdftk","vlc","multimedia","codec"]},
              {name: "üêß Linux & Open Source", k:["linux","libreoffice","openoffice","perl","ubuntu","distro","lts","live usb","conky","fedora","debian","arch","slackware","nixos","opensuse","blankon","mirror","repo","apt","yum","rsync","grub","chroot","dpkg","open source","oss","foss","komunitas","kpli","gnome","kde","compiz","desktop","ubuntu party"]},
              {name: "üìö Islam & Kehidupan", k:["islam","shalat","akidah","aqidah","qunut","istigfar","istighfar","mukjizat","masjid","madinah","imam","risalah","nabi","quran","hadis","hijriyah","muslim","doa","hukum","halal","haram","syariat","fiqh","hijab","ramadhan","maulid","piagam madinah","mushaf utsman","tabut","iman","sabar","ghibah","fitnah","sombong","salam","janji"]},
              {name: "üèûÔ∏è Budaya, Kuliner & Lifestyle", k:["kuliner","obat","sakit","pecel","minuman","jagung","kerupuk","angkringan","kurma","kopi","camilan","wisata","jogja","bali","bekapai","hotel","bandara","respiro","tidur","kesehatan","psikotes","wanita","bahagia"]},
              {name: "üì∞ Catatan & Sosial", k:["catatan","pt","kopdar","sejarah","indonesia","peradaban","sahabat","kota","rencana","kreativitas","ibu","perjalanan","bisnis","perusahaan","ekspedisi","aturan","harian","cuti","nostalgia","renungan","golput","duit","pekerjaan","kerja halal","perencanaan","produktifitas","sahabat","fenomena","sktm","ppdb"]},
              {name: "üíª Windows & Teknologi Umum", k:["windows","learning","cpu","samba","jaringan","software","terminal","github","shutdown","hdd","ssd","refresh","optimasi","bootloader","virtualbox","keyring","laptop","osborne1","baterai","mic","wifi","amd","cooling","phishing","eula","lisensi","piracy"]}
            ];
            return (cats.find(c=>c.k.some(k=>t.includes(k)))||{name:"üóÇÔ∏è Lainnya"}).name;
          }

          const files = fs.readdirSync("artikel").filter(f=>f.endsWith(".html"));
          const grouped = {};
          const sitemapUrls = [];

          files.forEach(f=>{
            const html = fs.readFileSync(`artikel/${f}`,"utf-8");
            const dom = new JSDOM(html);
            const doc = dom.window.document;

            const title = doc.querySelector("title")?.textContent || f;
            const category = titleToCategory(title);
            if(!grouped[category]) grouped[category] = [];
            grouped[category].push([title,f]);

            let img = doc.querySelector('meta[property="og:image"]')?.content
                   || doc.querySelector('meta[name="twitter:image"]')?.content
                   || doc.querySelector("main section img")?.src
                   || FALLBACK_IMG;
            if(!img.startsWith("http")) img = BASE_URL + img;

            sitemapUrls.push({
              loc: BASE_URL + f,
              lastmod: new Date().toISOString().split("T")[0],
              priority: 0.6,
              changefreq: "monthly",
              img
            });
          });

            // Save artikel.json
          fs.writeFileSync("artikel.json", JSON.stringify(grouped, null, 2));

          // Build sitemap.xml
          let sitemap = `<?xml version="1.0" encoding="UTF-8"?>\n`;
          sitemap += `<urlset xmlns="http://www.sitemaps.org/schemas/sitemap/0.9" xmlns:image="http://www.google.com/schemas/sitemap-image/1.1">\n`;
          sitemapUrls.forEach(u=>{
            sitemap += `  <url>\n`;
            sitemap += `    <loc>${u.loc}</loc>\n`;
            sitemap += `    <lastmod>${u.lastmod}</lastmod>\n`;
            sitemap += `    <priority>${u.priority}</priority>\n`;
            sitemap += `    <changefreq>${u.changefreq}</changefreq>\n`;
            if(u.img){
              sitemap += `    <image:image>\n`;
              sitemap += `      <image:loc>${u.img}</image:loc>\n`;
              sitemap += `    </image:image>\n`;
            }
            sitemap += `  </url>\n`;
          });
          sitemap += `</urlset>\n`;
          fs.writeFileSync("sitemap.xml", sitemap);

          console.log("‚úÖ artikel.json & sitemap.xml generated");
          EOF

          node generate.js
          
          // --- Perbandingan dengan artikel.json lama ---
          let oldData = {};
          if (fs.existsSync("artikel.json")) {
            try {
              oldData = JSON.parse(fs.readFileSync("artikel.json","utf-8"));
            } catch {}
          }

          const newData = grouped;
          const changes = {added:[], removed:[], updated:[]};

          // cari yang baru ditambahkan
          for (const [cat, arts] of Object.entries(newData)) {
            arts.forEach(([title,file])=>{
              const existed = Object.values(oldData).flat().some(([t,f])=>t===title && f===file);
              if (!existed) changes.added.push(`${title} (${file})`);
            });
          }

          // cari yang dihapus
          for (const [cat, arts] of Object.entries(oldData)) {
            arts.forEach(([title,file])=>{
              const stillExists = Object.values(newData).flat().some(([t,f])=>t===title && f===file);
              if (!stillExists) changes.removed.push(`${title} (${file})`);
            });
          }

          // log perubahan
          console.log("üìä Perubahan artikel:");
          if (changes.added.length) console.log("‚ûï Ditambahkan:", changes.added.join(", "));
          if (changes.removed.length) console.log("‚ûñ Dihapus:", changes.removed.join(", "));
          if (!changes.added.length && !changes.removed.length) console.log("‚ÑπÔ∏è Tidak ada perubahan pada artikel.");

      - name: Commit and push results
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add artikel.json sitemap.xml
          git diff --cached --quiet || git commit -m "Auto-generate artikel.json & sitemap.xml"
          git push

      - name: Ping Google & Bing with retry
        run: |
          echo "üîî Pinging search engines..."
          for TRY in 1 2; do
            STATUS_GOOGLE=$(curl -o /dev/null -s -w "%{http_code}" "https://www.google.com/ping?sitemap=https://frijal.github.io/sitemap.xml")
            STATUS_BING=$(curl -o /dev/null -s -w "%{http_code}" "https://www.bing.com/ping?sitemap=https://frijal.github.io/sitemap.xml")
            echo "Attempt $TRY - Google status: $STATUS_GOOGLE | Bing status: $STATUS_BING"

            if [ "$STATUS_GOOGLE" = "200" ] && [ "$STATUS_BING" = "200" ]; then
              echo "‚úÖ Ping sukses ke Google & Bing"
              exit 0
            fi

            if [ "$TRY" -eq 1 ]; then
              echo "‚ö†Ô∏è Ping gagal, coba ulang dalam 30 detik..."
              sleep 30
            fi
          done

          echo "‚ùå Ping Google/Bing tetap gagal setelah 2 percobaan"
          exit 1

      - name: Telegram notification
        if: failure()
        run: |
          MSG="‚ùå Sitemap ping gagal di repo $GITHUB_REPOSITORY (workflow: $GITHUB_WORKFLOW)"
          curl -s -X POST "https://api.telegram.org/bot${{ secrets.TELEGRAM_TOKEN }}/sendMessage" \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="$MSG"
