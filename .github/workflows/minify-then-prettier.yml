name: Optimize Files (HTML, JS, CSS)

on:
  workflow_dispatch:
    inputs:
      delay:
        description: "Delay (detik) sebelum menjalankan Prettier"
        required: true
        default: "300"
      runPrettier:
        description: "Jalankan Prettier setelah minify?"
        required: true
        default: "true"
      targetDirs:
        description: "Daftar folder target (pisahkan dengan koma, contoh: artikel,docs,pages)"
        required: true
        default: "artikel"
      extensions:
        description: "Ekstensi file yang diproses (pisahkan dengan koma, contoh: html,js,css)"
        required: true
        default: "html,js,css"
      outputDir:
        description: "Folder output hasil optimisasi"
        required: true
        default: "optimized"
      saveMode:
        description: "Mode penyimpanan: overwrite, output, atau both"
        required: true
        default: "both"

jobs:
  optimize:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install dependencies
        run: |
          npm install -g prettier html-minifier terser clean-css-cli

      - name: Prepare output folder
        if: ${{ github.event.inputs.saveMode != 'overwrite' }}
        run: mkdir -p ${{ github.event.inputs.outputDir }}

      - name: Minify Files
        run: |
          IFS=',' read -ra DIRS <<< "${{ github.event.inputs.targetDirs }}"
          IFS=',' read -ra EXTS <<< "${{ github.event.inputs.extensions }}"
          for dir in "${DIRS[@]}"; do
            echo "🔎 Processing folder: $dir"
            if [ -d "$dir" ]; then
              for ext in "${EXTS[@]}"; do
                find "$dir"/ -name "*.${ext}" | while read file; do
                  relpath="${file#$dir/}"
                  outpath="${{ github.event.inputs.outputDir }}/$relpath"
                  mkdir -p "$(dirname "$outpath")"

                  case "$ext" in
                    html)
                      html-minifier \
                        --collapse-whitespace \
                        --remove-comments \
                        --minify-css true \
                        --minify-js true \
                        "$file" -o "$file"
                      ;;
                    js)
                      terser "$file" -c -m -o "$file"
                      ;;
                    css)
                      cleancss -o "$file" "$file"
                      ;;
                  esac

                  if [ "${{ github.event.inputs.saveMode }}" != "overwrite" ]; then
                    cp "$file" "$outpath"
                  fi
                done
              done
            else
              echo "⚠️ Folder $dir tidak ditemukan"
            fi
          done

      - name: Wait before Prettier
        if: ${{ github.event.inputs.runPrettier == 'true' }}
        run: sleep ${{ github.event.inputs.delay }}

      - name: Prettier Format
        if: ${{ github.event.inputs.runPrettier == 'true' }}
        run: |
          IFS=',' read -ra EXTS <<< "${{ github.event.inputs.extensions }}"
          if [ "${{ github.event.inputs.saveMode }}" != "output" ]; then
            for ext in "${EXTS[@]}"; do
              prettier --write "${{ github.event.inputs.targetDirs }}/**/*.${ext}"
            done
          fi
          if [ "${{ github.event.inputs.saveMode }}" != "overwrite" ]; then
            for ext in "${EXTS[@]}"; do
              prettier --write "${{ github.event.inputs.outputDir }}/**/*.${ext}"
            done
          fi

      - name: Commit changes
        run: |
          git config --global user.name "Auto Optimizer"
          git config --global user.email "actions@github.com"
          if [ "${{ github.event.inputs.saveMode }}" != "output" ]; then
            git add ${{ github.event.inputs.targetDirs }} || true
          fi
          if [ "${{ github.event.inputs.saveMode }}" != "overwrite" ]; then
            git add ${{ github.event.inputs.outputDir }} || true
          fi
          git commit -m "♻️ Optimized (${{ github.event.inputs.extensions }}) with saveMode=${{ github.event.inputs.saveMode }}" || echo "No changes to commit"
          git push
        continue-on-error: true
